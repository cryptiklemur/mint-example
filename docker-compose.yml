services:
  traefik:
    image: traefik
    platform: linux/amd64
    command:
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --api.dashboard=true
      - --metrics.prometheus=true
      - --log.level=INFO
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/etc/traefik/dynamic_conf.yml
    ports:
      - "80:80"
      - "8080:8080" # Dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./config/traefik/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml:ro"
    labels:
      - traefik.enable=true

  wordpress:
    image: wordpress
    platform: linux/amd64
    ports:
      - 3004:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
    depends_on:
      - db
    labels:
      - traefik.enable=true
      - traefik.http.services.wordpress.loadbalancer.server.port=80

  # Ideally this would be Postgres. Don't want to spend too much time on that though
  # Or mariadb.... again, trying to avoid spending too much time on this
  db:
    image: mysql:5.7
    platform: linux/amd64
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql

  redis:
    image: redis:alpine
    platform: linux/amd64
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data

  frontend-a:
    build:
      context: ./frontend-a
      args:
        - ENV=dev
    volumes:
      - ./frontend-a:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    labels:
      - traefik.enable=true
      - traefik.http.services.frontend-a.loadbalancer.server.port=3000

  frontend-b:
    build:
      context: ./frontend-b
      args:
        - ENV=dev
    volumes:
      - ./frontend-b:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    labels:
      - traefik.enable=true
      - traefik.http.services.frontend-b.loadbalancer.server.port=3000

  api:
    build:
      context: ./api
      args:
        - ENV=dev
    environment:
      REDIS_URL: redis://redis:6379
    volumes:
      - ./api:/app
      - /app/node_modules
    ports:
      - "9090:3000"

volumes:
  db_data:
  redis_data:
